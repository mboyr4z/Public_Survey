@using Microsoft.AspNetCore.Identity
@using StoreApp.Infrastructure.Roles
@inject SignInManager<IdentityUser> SignInManager
@inject UserManager<IdentityUser> UserManager

@{
    var user = await UserManager.GetUserAsync(User);
    bool isLoggedIn = (user != null) && SignInManager.IsSignedIn(User);
    Roles signingRole = Roles.Guess;
    if(isLoggedIn){
        string firstRole = (await UserManager.GetRolesAsync(user))[0];
        signingRole = (Roles)Enum.Parse(typeof(Roles), firstRole);
    }
    
}

<header
    class="d-flex flex-wrap align-items-center justify-content-center justify-content-md-between py-3 mb-4 border-bottom">
    <a href="/" class="d-flex align-items-center col-md-3 mb-2 mb-md-0 text-dark text-decoration-none">
        <svg class="bi me-2" width="40" height="32" role="img" aria-label="Bootstrap">
            <use xlink:href="#bootstrap"></use>
        </svg>
    </a>

    <ul class="nav col-12 col-md-auto mb-2 justify-content-center mb-md-0">
        <li><a asp-area="" asp-controller="MainPage" asp-action="Index" class="nav-link px-2 link-secondary">Home</a></li>

        @if(signingRole == Roles.Admin){
            <li><a asp-area="admin" asp-controller="dashboard" class="nav-link px-2 link-dark">Admin</a></li>
        }
        
    </ul>

    @if(isLoggedIn){
        <div class="col-md-3 text-end">
            <a  asp-controller="Login" asp-action="LogOut" class="btn btn-outline-primary me-2">Log out</a>
        </div>
    }else{
        <div class="col-md-3 text-end">
            <a  asp-controller="Login" asp-action="Index" class="btn btn-outline-primary me-2">Login</a>
            <a  asp-controller="Register" asp-action="Index" class="btn btn-primary me-2">Sign-up</a>
        </div>
    }
    
</header>